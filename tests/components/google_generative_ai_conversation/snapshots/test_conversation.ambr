# serializer version: 1
# name: test_chat_history
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 1.0,
          'top_k': 64,
          'top_p': 0.95,
        }),
        'model_name': 'models/gemini-1.5-flash-latest',
        'safety_settings': dict({
          'DANGEROUS': 'BLOCK_MEDIUM_AND_ABOVE',
          'HARASSMENT': 'BLOCK_MEDIUM_AND_ABOVE',
          'HATE': 'BLOCK_MEDIUM_AND_ABOVE',
          'SEXUAL': 'BLOCK_MEDIUM_AND_ABOVE',
        }),
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              You are a voice assistant for Home Assistant.
              Answer in plain text. Keep it simple and to the point.
              The current time is 05:00:00.
              Today's date is 05/24/24.
              Only if the user wants to control a device, tell them to edit the AI configuration and allow access to Home Assistant.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        '1st user request',
      ),
      dict({
      }),
    ),
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 1.0,
          'top_k': 64,
          'top_p': 0.95,
        }),
        'model_name': 'models/gemini-1.5-flash-latest',
        'safety_settings': dict({
          'DANGEROUS': 'BLOCK_MEDIUM_AND_ABOVE',
          'HARASSMENT': 'BLOCK_MEDIUM_AND_ABOVE',
          'HATE': 'BLOCK_MEDIUM_AND_ABOVE',
          'SEXUAL': 'BLOCK_MEDIUM_AND_ABOVE',
        }),
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              You are a voice assistant for Home Assistant.
              Answer in plain text. Keep it simple and to the point.
              The current time is 05:00:00.
              Today's date is 05/24/24.
              Only if the user wants to control a device, tell them to edit the AI configuration and allow access to Home Assistant.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
          dict({
            'parts': '1st user request',
            'role': 'user',
          }),
          dict({
            'parts': '1st model response',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        '2nd user request',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[config_entry_options0-None]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 1.0,
          'top_k': 64,
          'top_p': 0.95,
        }),
        'model_name': 'models/gemini-1.5-flash-latest',
        'safety_settings': dict({
          'DANGEROUS': 'BLOCK_MEDIUM_AND_ABOVE',
          'HARASSMENT': 'BLOCK_MEDIUM_AND_ABOVE',
          'HATE': 'BLOCK_MEDIUM_AND_ABOVE',
          'SEXUAL': 'BLOCK_MEDIUM_AND_ABOVE',
        }),
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              You are a voice assistant for Home Assistant.
              Answer in plain text. Keep it simple and to the point.
              The current time is 05:00:00.
              Today's date is 05/24/24.
              Only if the user wants to control a device, tell them to edit the AI configuration and allow access to Home Assistant.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[config_entry_options0-conversation.google_generative_ai_conversation]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 1.0,
          'top_k': 64,
          'top_p': 0.95,
        }),
        'model_name': 'models/gemini-1.5-flash-latest',
        'safety_settings': dict({
          'DANGEROUS': 'BLOCK_MEDIUM_AND_ABOVE',
          'HARASSMENT': 'BLOCK_MEDIUM_AND_ABOVE',
          'HATE': 'BLOCK_MEDIUM_AND_ABOVE',
          'SEXUAL': 'BLOCK_MEDIUM_AND_ABOVE',
        }),
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              You are a voice assistant for Home Assistant.
              Answer in plain text. Keep it simple and to the point.
              The current time is 05:00:00.
              Today's date is 05/24/24.
              Only if the user wants to control a device, tell them to edit the AI configuration and allow access to Home Assistant.
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[config_entry_options1-None]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 1.0,
          'top_k': 64,
          'top_p': 0.95,
        }),
        'model_name': 'models/gemini-1.5-flash-latest',
        'safety_settings': dict({
          'DANGEROUS': 'BLOCK_MEDIUM_AND_ABOVE',
          'HARASSMENT': 'BLOCK_MEDIUM_AND_ABOVE',
          'HATE': 'BLOCK_MEDIUM_AND_ABOVE',
          'SEXUAL': 'BLOCK_MEDIUM_AND_ABOVE',
        }),
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              You are a voice assistant for Home Assistant.
              Answer in plain text. Keep it simple and to the point.
              The current time is 05:00:00.
              Today's date is 05/24/24.
              Call the intent tools to control Home Assistant. Just pass the name to the intent. When controlling an area, prefer passing area name.
              An overview of the areas and the devices in this smart home:
              light.test_device:
                names: Test Device
                state: unavailable
                areas: Test Area
              light.test_service:
                names: Test Service
                state: unavailable
                areas: Test Area
              light.test_service_2:
                names: Test Service
                state: unavailable
                areas: Test Area
              light.test_service_3:
                names: Test Service
                state: unavailable
                areas: Test Area
              light.test_device_2:
                names: Test Device 2
                state: unavailable
                areas: Test Area 2
              light.test_device_3:
                names: Test Device 3
                state: unavailable
                areas: Test Area 2
              light.test_device_4:
                names: Test Device 4
                state: unavailable
                areas: Test Area 2
              light.test_device_3_2:
                names: Test Device 3
                state: unavailable
                areas: Test Area 2
              light.none:
                names: None
                state: unavailable
                areas: Test Area 2
              light.1:
                names: '1'
                state: unavailable
                areas: Test Area 2
  
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
# name: test_default_prompt[config_entry_options1-conversation.google_generative_ai_conversation]
  list([
    tuple(
      '',
      tuple(
      ),
      dict({
        'generation_config': dict({
          'max_output_tokens': 150,
          'temperature': 1.0,
          'top_k': 64,
          'top_p': 0.95,
        }),
        'model_name': 'models/gemini-1.5-flash-latest',
        'safety_settings': dict({
          'DANGEROUS': 'BLOCK_MEDIUM_AND_ABOVE',
          'HARASSMENT': 'BLOCK_MEDIUM_AND_ABOVE',
          'HATE': 'BLOCK_MEDIUM_AND_ABOVE',
          'SEXUAL': 'BLOCK_MEDIUM_AND_ABOVE',
        }),
        'tools': None,
      }),
    ),
    tuple(
      '().start_chat',
      tuple(
      ),
      dict({
        'history': list([
          dict({
            'parts': '''
              You are a voice assistant for Home Assistant.
              Answer in plain text. Keep it simple and to the point.
              The current time is 05:00:00.
              Today's date is 05/24/24.
              Call the intent tools to control Home Assistant. Just pass the name to the intent. When controlling an area, prefer passing area name.
              An overview of the areas and the devices in this smart home:
              light.test_device:
                names: Test Device
                state: unavailable
                areas: Test Area
              light.test_service:
                names: Test Service
                state: unavailable
                areas: Test Area
              light.test_service_2:
                names: Test Service
                state: unavailable
                areas: Test Area
              light.test_service_3:
                names: Test Service
                state: unavailable
                areas: Test Area
              light.test_device_2:
                names: Test Device 2
                state: unavailable
                areas: Test Area 2
              light.test_device_3:
                names: Test Device 3
                state: unavailable
                areas: Test Area 2
              light.test_device_4:
                names: Test Device 4
                state: unavailable
                areas: Test Area 2
              light.test_device_3_2:
                names: Test Device 3
                state: unavailable
                areas: Test Area 2
              light.none:
                names: None
                state: unavailable
                areas: Test Area 2
              light.1:
                names: '1'
                state: unavailable
                areas: Test Area 2
  
            ''',
            'role': 'user',
          }),
          dict({
            'parts': 'Ok',
            'role': 'model',
          }),
        ]),
      }),
    ),
    tuple(
      '().start_chat().send_message_async',
      tuple(
        'hello',
      ),
      dict({
      }),
    ),
  ])
# ---
